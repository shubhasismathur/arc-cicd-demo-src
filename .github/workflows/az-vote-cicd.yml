name: CI_CD_Dev

on:
  push:
    branches:
      - master
      - FluxV2
      - release/*

permissions:
  id-token: write  ## Required for OIDC, safe to include even if not using OIDC
  contents: read

jobs:
  Build_Push_Azure_Vote_App_Image:
    runs-on: ubuntu-latest
    env:
      SRC_FOLDER: azure-vote
      IMAGE_REPO_NAME: azvote      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Create Frontend Image Tags
      env:
        SOURCE_LOCATION: src/azure-vote-front 
        DOCKER_FILE: Dockerfile
        IMAGE_NAME: azure-vote-front
        TASKNAME: FRONTEND_IMAGE
        AZ_ACR_NAME: ${{ secrets.AZ_ACR_NAME }}   
      run: |
        chmod +x $GITHUB_WORKSPACE/utils/buildContainerTemplate.sh
        $GITHUB_WORKSPACE/utils/buildContainerTemplate.sh -f $SRC_FOLDER \
                                                         -g $GITHUB_WORKSPACE \
                                                         -s $SOURCE_LOCATION \
                                                         -u $AZ_ACR_NAME \
                                                         -r $IMAGE_REPO_NAME/$IMAGE_NAME \
                                                         -t $TASKNAME \
                                                         -d $DOCKER_FILE
    - name: Create Backend Image Tags
      env:
        SOURCE_LOCATION: src/azure-vote-back
        DOCKER_FILE: Dockerfile
        IMAGE_NAME: azure-vote-back
        TASKNAME: BACKEND_IMAGE
        AZ_ACR_NAME: ${{ secrets.AZ_ACR_NAME }}   
      run: |
        chmod +x $GITHUB_WORKSPACE/utils/buildContainerTemplate.sh
        $GITHUB_WORKSPACE/utils/buildContainerTemplate.sh -f $SRC_FOLDER \
                                                         -g $GITHUB_WORKSPACE \
                                                         -s $SOURCE_LOCATION \
                                                         -u $AZ_ACR_NAME \
                                                         -r $IMAGE_REPO_NAME/$IMAGE_NAME \
                                                         -t $TASKNAME \
                                                         -d $DOCKER_FILE

    - name: Upload Image Tags
      uses: actions/upload-artifact@v4
      with:
        name: image_tags
        path: ${{ github.workspace }}/image_tags

    - name: Upload Manifests Templates
      uses: actions/upload-artifact@v4
      with:
        name: manifests
        path: ${{ github.workspace }}/azure-vote/manifests

    - name: Upload Utils
      uses: actions/upload-artifact@v4
      with:
        name: utils
        path: ${{ github.workspace }}/utils

  Deploy_to_Dev:
    name: "Deploy to Dev"
    runs-on: ubuntu-latest
    needs: Build_Push_Azure_Vote_App_Image
    environment: az-vote-app-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Image Tags
      uses: actions/download-artifact@v4
      with:
        name: image_tags
        path: ${{ github.workspace }}/image_tags

    - name: Download Manifests Templates
      uses: actions/download-artifact@v4
      with:
        name: manifests
        path: ${{ github.workspace }}/manifests

    - name: Download Utils
      uses: actions/download-artifact@v4
      with:
        name: utils
        path: ${{ github.workspace }}/utils

    - name: Read Image Tags
      run: |
        for file in ${{ github.workspace }}/image_tags/*; do
          echo "$(basename $file)=$(cat $file)" >> $GITHUB_ENV
        done 

    - name: Generate Manifests
      run: |
        chmod +x ${{ github.workspace }}/utils/generate-manifests.sh
        ${{ github.workspace }}/utils/generate-manifests.sh manifests gen_manifests
      env:
        TARGET_NAMESPACE: ${{ secrets.TARGET_NAMESPACE }}
        VOTE_APP_TITLE: ${{ secrets.VOTE_APP_TITLE }}
        DEMO_APP_URL: ${{ secrets.DEMO_APP_URL }}
        AZURE_VOTE_IMAGE_REPO: ${{ secrets.AZ_ACR_NAME }}.azurecr.io${{ env.IMAGE_REPO_NAME }}
        SYSTEM_LABEL: ${{ secrets.SYSTEM_LABEL }}

    - name: Create PR
      run: |
        chmod +x ${{ github.workspace }}/utils/create-pr.sh
        release_number=$(echo $GITHUB_REF | awk -F"release/" '{print $2}')
        if [[ -n "$release_number" ]]; then
          release_prefix="release/$release_number/"
        else
          release_prefix=""
        fi

        ${{ github.workspace }}/utils/create-pr.sh \
          -s ${{ github.workspace }}/gen_manifests \
          -d ${{ secrets.MANIFESTS_FOLDER }} \
          -r ${{ secrets.MANIFESTS_REPO }} \
          -b "${release_prefix}${GITHUB_RUN_ID}/${{ secrets.ENVIRONMENT_NAME }}" \
          -i $GITHUB_RUN_ID \
          -t ${{ secrets.PAT }} \
          -e ${{ secrets.ENVIRONMENT_NAME }}
